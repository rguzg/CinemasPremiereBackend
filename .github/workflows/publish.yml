name: CinemasPremiereCD
on:
  push:
    branches:
      - 'main'
      - 'dev'
env:
  PRISMA_MANAGEMENT_API_SECRET: ${{ secrets.PRISMA_MANAGEMENT_API_SECRET }}
  URL_BASE: ${{ secrets.URL_BASE }}
  DEPLOY_URL_BASE: ${{secrets.DEPLOY_URL_BASE}}
  SECRET: ${{secrets.SECRET}}
  ENVIRONMENT: ${{secrets.ENVIRONMENT}}
  NODE_ENV: ${{secrets.NODE_ENV}}
jobs:
  prisma_deploy:
    name: Run Prisma Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Include repo contents in workspace
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install Prisma CLI
        run: npm install -g prisma@1.34.10
      - name: Deploy to Prisma Cloud
        run: prisma deploy -p ${{ github.workspace }}/prisma/prisma.yml
  create_envfile:
    name: Create .env file
    runs-on: ubuntu-latest
    steps:
      - name: Run create .env file script
        run: |
          touch .env
          echo PRISMA_MANAGEMENT_API_SECRET="$PRISMA_MANAGEMENT_API" >> .env
          echo URL_BASE="$URL_BASE" >> .env
          echo DEPLOY_URL_BASE="$DEPLOY_URL_BASE" >> .env
          echo SECRET="$SECRET" >> .env
          echo ENVIRONMENT="$ENVIRONMENT" >> .env
          echo NODE_ENV="$NODE_ENV" >> .env
        shell: bash
  upload_dockerhub:
    name: Upload to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{secrets.DOCKERHUB_USERNAME}}/CinemasPremiereBackend:latest
